package cn.iocoder.boot;

import java.io.*;
import java.nio.charset.StandardCharsets;
import java.util.ArrayList;
import java.util.List;
import java.util.Properties;

/**
 * 基于 properties 的配置读取与写入
 * 默认文件名：config.properties（项目根目录）
 * 支持从旧版 config.txt 自动迁移（按行顺序：手机号、密码、驱动路径、题目ID）
 */
public class Config {

    private static final String 默认配置文件 = "config.properties";

    private static final Properties props = new Properties();
    private static File 配置文件 = new File(默认配置文件);

    public static synchronized void 加载() {
        加载(默认配置文件);
    }

    public static synchronized void 加载(String 路径) {
        配置文件 = new File(路径);
        if (!配置文件.exists()) {
            // 若不存在，尝试从旧版 config.txt 迁移
            迁移自旧版文本配置();
        }
        if (配置文件.exists()) {
            try (InputStream in = new FileInputStream(配置文件)) {
                props.clear();
                props.load(in);
            } catch (IOException e) {
                // 保持静默，不中断主流程
            }
        }
    }

    private static void 迁移自旧版文本配置() {
        File 旧文本 = new File("config.txt");
        if (!旧文本.exists()) return;
        List<String> 行 = new ArrayList<>();
        try (BufferedReader br = new BufferedReader(new InputStreamReader(new FileInputStream(旧文本), StandardCharsets.UTF_8))) {
            String line;
            while ((line = br.readLine()) != null) {
                行.add(line.trim());
            }
        } catch (IOException ignore) {
            return;
        }
        // 期望至少4行：手机号、密码、驱动路径、题目ID
        if (行.size() >= 4) {
            props.clear();
            props.setProperty("phone", 行.get(0));
            props.setProperty("password", 行.get(1));
            props.setProperty("edgedriver", 行.get(2));
            props.setProperty("problemId", 行.get(3));
            保存();
        }
    }

    private static synchronized void 保存() {
        if (配置文件 == null) 配置文件 = new File(默认配置文件);
        try (OutputStream out = new FileOutputStream(配置文件)) {
            props.store(out, "Auto-generated by Config");
        } catch (IOException ignore) {
        }
    }

    // ========= 对外中文API =========

    public static String 获取手机号() {
        ensureLoaded();
        return props.getProperty("phone", "");
    }

    public static String 获取密码() {
        ensureLoaded();
        return props.getProperty("password", "");
    }

    public static String 获取驱动路径() {
        ensureLoaded();
        return props.getProperty("edgedriver", "");
    }

    public static String 获取题目ID() {
        ensureLoaded();
        return props.getProperty("problemId", "0");
    }

    public static void 更新题目ID(int 新题目ID) {
        ensureLoaded();
        props.setProperty("problemId", String.valueOf(新题目ID));
        保存();
    }

    private static void ensureLoaded() {
        if (props.isEmpty()) {
            加载();
        }
    }
}

